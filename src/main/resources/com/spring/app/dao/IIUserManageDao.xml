<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.app.dao.IIUserManageDao">
   <select id="findAllUser" resultType="com.spring.app.vo.UserVO">
        select t.name as userName, t.id as userId, t.contact as userContact from users t
   </select>
   <select id="findUserById" resultType="com.spring.app.vo.UserVO">
        select t.name as userName, t.id as userId, t.contact as userContact 
        from users t
        where t.id = #{userId, jdbcType=VARCHAR}
   </select>
    <update id="updateUser">
        update users
          set email = #{userEmail, jdbcType=VARCHAR},
              contact = #{userContact, jdbcType=VARCHAR}
          where id = #{userId, jdbcType=VARCHAR}
    </update>
    <delete id="deleteUser">
        delete from users
          where id = #{userId, jdbcType=VARCHAR}
    </delete>
    <insert id="createUser">
        insert into users
            (
             id,
             email,
             contact,
             name
            )
            VALUES
                (
                  #{userId, jdbcType=VARCHAR},
                 #{userEmail, jdbcType=VARCHAR},
                 #{userContact,jdbcType=VARCHAR},
                 #{userName,jdbcType=VARCHAR}
                )
    </insert>
    <resultMap id="userResult" type="com.spring.app.vo.UserVO">
        <id property="userId" column="id" />
        <result property="userEmail" column="email"/>
        <result property="userContact" column="contact"/>
        <result property="userName" column="name"/>
    </resultMap>

    <select id="findUserwithContact" resultMap="userResult">
        select t.id ,
               t.contact ,
               t.email ,
               t.name
        from users t
        where t.id = #{userId, jdbcType=VARCHAR}
        and t.contact = #{userContact, jdbcType=VARCHAR}
    </select>
    <select id="findUserMap" resultMap="userResult">
        select t.* from users t
        where t.id in
          <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
              #{item, jdbcType=VARCHAR}
          </foreach>
    </select>
</mapper>